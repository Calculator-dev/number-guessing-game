{"version":3,"sources":["components/Buttons.js","components/Game.js","App.js","index.js"],"names":["randomNumber","Math","floor","random","console","log","Buttons","useState","input","setInput","attempts","setAttempts","msg","setMsg","previousGuesses","setPreviousGuesses","showButton","setShowButton","succes","className","low","high","belowZero","aboveHundred","resetHandler","useEffect","disabled","length","type","value","onChange","e","parseInt","target","Number","onClick","preventDefault","prevCount","join","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EACvDC,QAAQC,IAAIL,GAEZ,IAuFeM,EAvFC,WAEZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAoCR,oBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,mBAAGC,UAAU,SAAb,sCACTC,EAAM,mBAAGD,UAAU,MAAb,sCACNE,EAAO,mBAAGF,UAAU,OAAb,sCACPG,EAAY,mBAAGH,UAAU,MAAb,iFACZI,EAAe,mBAAGJ,UAAU,MAAb,+EA2CrB,SAASK,IACLf,EAAS,IAcb,OAXAgB,qBAAU,WACW,IAAbf,GAAkBF,IAAUR,GAC5Ba,EAAO,mBAAGM,UAAU,SAAb,uCACPF,GAAc,IAEI,IAAbP,IACLG,EAAO,mBAAGM,UAAU,WAAb,mCACPF,GAAc,MAEnB,CAACP,EAAUF,IAGV,uBAAMW,UAAU,OAAhB,UACI,mEACA,uBAAOO,SAAUZ,EAAgBA,EAAgBa,OAAS,KAAO3B,EAAc4B,KAAK,SAASC,MAAOrB,EAAOsB,SAAU,SAAAC,GAAC,OAAItB,EAASuB,SAASD,EAAEE,OAAOJ,QAAUK,WAC/J,uBACA,wBAAQR,SAAuB,IAAbhB,EAAgBS,UAAU,SAASgB,QA3D7D,SAAuBJ,GAEnB,OADAA,EAAEK,iBACE5B,EAAQ,GACRK,EAAOS,QACPb,EAAS,KAGJD,EAAQ,KACbK,EAAOU,QACPd,EAAS,UAITD,IAAUR,GACVe,EAAmB,GAAD,mBAAKD,GAAL,CAAsBN,KACxCG,GAAY,SAAC0B,GAAD,OAAeA,EAAY,KACvCpB,GAAc,GACdJ,EAAOK,IAEFV,EAAQR,GACbe,EAAmB,GAAD,mBAAKD,GAAL,CAAsBN,KACxCG,GAAY,SAAC0B,GAAD,OAAeA,EAAY,KACvC5B,EAAS,IACTI,EAAOO,KAGPL,EAAmB,GAAD,mBAAKD,GAAL,CAAsBN,KACxCG,GAAY,SAAC0B,GAAD,OAAeA,EAAY,KACvC5B,EAAS,IACTI,EAAOQ,MA8BP,oBACA,wBAAQK,SAAUZ,EAAgBA,EAAgBa,OAAS,KAAO3B,EAAcmB,UAAU,QAAQgB,QA1B1G,SAAsBJ,GAClBA,EAAEK,iBACF3B,EAAS,KAwBL,mBACA,wBAAQiB,SAAUZ,EAAgBA,EAAgBa,OAAS,KAAO3B,EAAcmB,UAAU,QAAQgB,QAASX,EAA3G,mBACA,qDAAwBd,KACxB,mDAAsBI,EAAgBwB,KAAK,SAC1C1B,EACAI,GAAc,wBAAQG,UAAU,eAAegB,QAASX,EAA1C,gCC5EZe,EARF,WACT,OACI,8BACI,cAAC,EAAD,OCMGC,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCDNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4c3dc208.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst randomNumber = Math.floor(Math.random() * 100) + 1;\r\nconsole.log(randomNumber);\r\n\r\nconst Buttons = () => {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [attempts, setAttempts] = useState(10);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [previousGuesses, setPreviousGuesses] = useState([]);\r\n    const [showButton, setShowButton] = useState(false);\r\n\r\n    const succes = <p className=\"succes\">Congratulations! You won</p>\r\n    const low = <p className=\"low\"> Your number is too low!</p>\r\n    const high = <p className=\"high\">Your number is too high!</p>\r\n    const belowZero = <p className=\"low\">Your number is less than 1, please enter a number between 1 and 100</p>\r\n    const aboveHundred = <p className=\"low\">Your number is above 100, please enter a number between 1 and 100</p>\r\n\r\n    \r\n\r\n    function submitHandler(e) {\r\n        e.preventDefault();\r\n        if (input < 1) {\r\n            setMsg(belowZero);\r\n            setInput(\"\");\r\n            return;\r\n        }\r\n        else if (input > 100) {\r\n            setMsg(aboveHundred);\r\n            setInput(\"\");\r\n            return;\r\n        }\r\n\r\n        if (input === randomNumber) {\r\n            setPreviousGuesses([...previousGuesses, input]);\r\n            setAttempts((prevCount) => prevCount - 1);\r\n            setShowButton(true);\r\n            setMsg(succes);\r\n        }\r\n        else if (input < randomNumber) {\r\n            setPreviousGuesses([...previousGuesses, input]);\r\n            setAttempts((prevCount) => prevCount - 1);\r\n            setInput(\"\");\r\n            setMsg(low);\r\n        }\r\n        else {\r\n            setPreviousGuesses([...previousGuesses, input]);\r\n            setAttempts((prevCount) => prevCount - 1);\r\n            setInput(\"\");\r\n            setMsg(high);\r\n        }\r\n    }\r\n\r\n\r\n    function clearHandler(e) {\r\n        e.preventDefault();\r\n        setInput(\"\");\r\n    }\r\n\r\n    function resetHandler() {\r\n        setInput(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (attempts === 0 && input === randomNumber) {\r\n            setMsg(<p className=\"succes\">Congratulations! You won</p>);\r\n            setShowButton(true);\r\n        }\r\n        else if (attempts === 0) {\r\n            setMsg(<p className=\"gameOver\">Game Over ! You lost</p>);\r\n            setShowButton(true);\r\n        }\r\n    }, [attempts, input])\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <h1>Enter a number between 1 and 100:</h1>\r\n            <input disabled={previousGuesses[previousGuesses.length - 1] === randomNumber} type=\"number\" value={input} onChange={e => setInput(parseInt(e.target.value) || Number)}></input>\r\n            <br />\r\n            <button disabled={attempts === 0} className=\"submit\" onClick={submitHandler}>Submit</button>\r\n            <button disabled={previousGuesses[previousGuesses.length - 1] === randomNumber} className=\"clear\" onClick={clearHandler}>Clear</button>\r\n            <button disabled={previousGuesses[previousGuesses.length - 1] === randomNumber} className=\"reset\" onClick={resetHandler}>Reset</button>\r\n            <p>Remaining attempts: {attempts}</p>\r\n            <p>Previous Guesses: {previousGuesses.join(\", \")}</p>\r\n            {msg}\r\n            {showButton && <button className=\"startNewGame\" onClick={resetHandler}>Start New Game</button>}\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Buttons;","import Buttons from \"./Buttons\";\r\n\r\nconst Game = () => {\r\n    return (\r\n        <div>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import './index.css';\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}